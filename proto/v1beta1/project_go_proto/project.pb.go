// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/v1beta1/project.proto

package project_go_proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Request to create a new project.
type CreateProjectRequest struct {
	// The project to create.
	Project              *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateProjectRequest) Reset()         { *m = CreateProjectRequest{} }
func (m *CreateProjectRequest) String() string { return proto.CompactTextString(m) }
func (*CreateProjectRequest) ProtoMessage()    {}
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddb5fc291fb42132, []int{0}
}

func (m *CreateProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProjectRequest.Unmarshal(m, b)
}
func (m *CreateProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProjectRequest.Marshal(b, m, deterministic)
}
func (m *CreateProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProjectRequest.Merge(m, src)
}
func (m *CreateProjectRequest) XXX_Size() int {
	return xxx_messageInfo_CreateProjectRequest.Size(m)
}
func (m *CreateProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProjectRequest proto.InternalMessageInfo

func (m *CreateProjectRequest) GetProject() *Project {
	if m != nil {
		return m.Project
	}
	return nil
}

// Request to get a project.
type GetProjectRequest struct {
	// The name of the project in the form of `projects/{PROJECT_ID}`.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProjectRequest) Reset()         { *m = GetProjectRequest{} }
func (m *GetProjectRequest) String() string { return proto.CompactTextString(m) }
func (*GetProjectRequest) ProtoMessage()    {}
func (*GetProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddb5fc291fb42132, []int{1}
}

func (m *GetProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectRequest.Unmarshal(m, b)
}
func (m *GetProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectRequest.Marshal(b, m, deterministic)
}
func (m *GetProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectRequest.Merge(m, src)
}
func (m *GetProjectRequest) XXX_Size() int {
	return xxx_messageInfo_GetProjectRequest.Size(m)
}
func (m *GetProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectRequest proto.InternalMessageInfo

func (m *GetProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request to list projects.
type ListProjectsRequest struct {
	// The filter expression.
	Filter string `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// Number of projects to return in the list.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Token to provide to skip to a particular spot in the list.
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProjectsRequest) Reset()         { *m = ListProjectsRequest{} }
func (m *ListProjectsRequest) String() string { return proto.CompactTextString(m) }
func (*ListProjectsRequest) ProtoMessage()    {}
func (*ListProjectsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddb5fc291fb42132, []int{2}
}

func (m *ListProjectsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectsRequest.Unmarshal(m, b)
}
func (m *ListProjectsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectsRequest.Marshal(b, m, deterministic)
}
func (m *ListProjectsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectsRequest.Merge(m, src)
}
func (m *ListProjectsRequest) XXX_Size() int {
	return xxx_messageInfo_ListProjectsRequest.Size(m)
}
func (m *ListProjectsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectsRequest proto.InternalMessageInfo

func (m *ListProjectsRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListProjectsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListProjectsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// Request to delete a project.
type DeleteProjectRequest struct {
	// The name of the project in the form of `projects/{PROJECT_ID}`.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteProjectRequest) Reset()         { *m = DeleteProjectRequest{} }
func (m *DeleteProjectRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteProjectRequest) ProtoMessage()    {}
func (*DeleteProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddb5fc291fb42132, []int{3}
}

func (m *DeleteProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProjectRequest.Unmarshal(m, b)
}
func (m *DeleteProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProjectRequest.Marshal(b, m, deterministic)
}
func (m *DeleteProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProjectRequest.Merge(m, src)
}
func (m *DeleteProjectRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteProjectRequest.Size(m)
}
func (m *DeleteProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProjectRequest proto.InternalMessageInfo

func (m *DeleteProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Response for listing projects.
type ListProjectsResponse struct {
	// The projects requested.
	Projects []*Project `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	// The next pagination token in the list response. It should be used as
	// `page_token` for the following request. An empty value means no more
	// results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProjectsResponse) Reset()         { *m = ListProjectsResponse{} }
func (m *ListProjectsResponse) String() string { return proto.CompactTextString(m) }
func (*ListProjectsResponse) ProtoMessage()    {}
func (*ListProjectsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddb5fc291fb42132, []int{4}
}

func (m *ListProjectsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectsResponse.Unmarshal(m, b)
}
func (m *ListProjectsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectsResponse.Marshal(b, m, deterministic)
}
func (m *ListProjectsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectsResponse.Merge(m, src)
}
func (m *ListProjectsResponse) XXX_Size() int {
	return xxx_messageInfo_ListProjectsResponse.Size(m)
}
func (m *ListProjectsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectsResponse proto.InternalMessageInfo

func (m *ListProjectsResponse) GetProjects() []*Project {
	if m != nil {
		return m.Projects
	}
	return nil
}

func (m *ListProjectsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Describes a Grafeas project.
type Project struct {
	// The name of the project in the form of `projects/{PROJECT_ID}`.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddb5fc291fb42132, []int{5}
}

func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (m *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(m, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateProjectRequest)(nil), "grafeas.v1beta1.project.CreateProjectRequest")
	proto.RegisterType((*GetProjectRequest)(nil), "grafeas.v1beta1.project.GetProjectRequest")
	proto.RegisterType((*ListProjectsRequest)(nil), "grafeas.v1beta1.project.ListProjectsRequest")
	proto.RegisterType((*DeleteProjectRequest)(nil), "grafeas.v1beta1.project.DeleteProjectRequest")
	proto.RegisterType((*ListProjectsResponse)(nil), "grafeas.v1beta1.project.ListProjectsResponse")
	proto.RegisterType((*Project)(nil), "grafeas.v1beta1.project.Project")
}

func init() { proto.RegisterFile("proto/v1beta1/project.proto", fileDescriptor_ddb5fc291fb42132) }

var fileDescriptor_ddb5fc291fb42132 = []byte{
	// 480 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0x95, 0x93, 0xd2, 0xa6, 0x17, 0x22, 0xd4, 0x69, 0x54, 0x82, 0xd3, 0x4a, 0xd1, 0x2c, 0xa0,
	0x8a, 0xe8, 0x58, 0x2d, 0x2b, 0x2a, 0x58, 0xf0, 0x52, 0x37, 0x2c, 0x22, 0xc3, 0x8a, 0x8d, 0x35,
	0xa9, 0x6e, 0xcc, 0x40, 0xe2, 0x31, 0x9e, 0x09, 0x82, 0xf0, 0x58, 0x20, 0xc4, 0x0f, 0x20, 0xf1,
	0x01, 0xfc, 0x12, 0xbf, 0xc0, 0x87, 0x20, 0x8f, 0x67, 0x4c, 0xd3, 0xd8, 0x21, 0xab, 0x64, 0xee,
	0xe3, 0xdc, 0x33, 0xf7, 0x9c, 0x31, 0xf4, 0xd2, 0x4c, 0x6a, 0x19, 0xbc, 0x3b, 0x1e, 0xa1, 0xe6,
	0xc7, 0x41, 0x9a, 0xc9, 0xd7, 0x78, 0xae, 0x99, 0x89, 0x92, 0x1b, 0x71, 0xc6, 0xc7, 0xc8, 0x15,
	0xb3, 0x69, 0x66, 0xd3, 0xfe, 0x7e, 0x2c, 0x65, 0x3c, 0xc1, 0x80, 0xa7, 0x22, 0xe0, 0x49, 0x22,
	0x35, 0xd7, 0x42, 0x26, 0xaa, 0x68, 0xf3, 0x7b, 0x36, 0x6b, 0x4e, 0xa3, 0xd9, 0x38, 0xc0, 0x69,
	0xaa, 0x3f, 0x14, 0x49, 0x1a, 0x42, 0xe7, 0x71, 0x86, 0x5c, 0xe3, 0xb0, 0xc0, 0x0a, 0xf1, 0xed,
	0x0c, 0x95, 0x26, 0xa7, 0xb0, 0x65, 0xd1, 0xbb, 0x5e, 0xdf, 0x3b, 0xbc, 0x7a, 0xd2, 0x67, 0x35,
	0xd3, 0x99, 0xeb, 0x74, 0x0d, 0xf4, 0x36, 0xec, 0x9c, 0xa1, 0xbe, 0x04, 0x48, 0x60, 0x23, 0xe1,
	0x53, 0x34, 0x68, 0xdb, 0xa1, 0xf9, 0x4f, 0x05, 0xec, 0x3e, 0x13, 0xca, 0x55, 0x2a, 0x57, 0xba,
	0x07, 0x9b, 0x63, 0x31, 0xd1, 0x98, 0xd9, 0x62, 0x7b, 0x22, 0x3d, 0xd8, 0x4e, 0x79, 0x8c, 0x91,
	0x12, 0x73, 0xec, 0x36, 0xfa, 0xde, 0xe1, 0x95, 0xb0, 0x95, 0x07, 0x9e, 0x8b, 0x39, 0x92, 0x03,
	0x00, 0x93, 0xd4, 0xf2, 0x0d, 0x26, 0xdd, 0xa6, 0x69, 0x34, 0xe5, 0x2f, 0xf2, 0x00, 0x1d, 0x40,
	0xe7, 0x09, 0x4e, 0x70, 0xe9, 0x9e, 0x55, 0xb4, 0x3e, 0x41, 0x67, 0x91, 0x96, 0x4a, 0x65, 0xa2,
	0x90, 0xdc, 0x87, 0x96, 0xbd, 0xa2, 0xea, 0x7a, 0xfd, 0xe6, 0x5a, 0x4b, 0x29, 0x3b, 0xc8, 0x2d,
	0xb8, 0x9e, 0xe0, 0x7b, 0x1d, 0x5d, 0x60, 0xd9, 0x30, 0x43, 0xdb, 0x79, 0x78, 0x58, 0x32, 0x3d,
	0x80, 0x2d, 0xdb, 0x5c, 0x45, 0xee, 0xe4, 0xe7, 0x06, 0xb4, 0x1c, 0x33, 0xf2, 0xcd, 0x83, 0xf6,
	0x82, 0x7c, 0xe4, 0xa8, 0x96, 0x51, 0x95, 0xcc, 0xfe, 0x7f, 0x2f, 0x40, 0xe9, 0xd7, 0xdf, 0x7f,
	0x7e, 0x34, 0xf6, 0xe9, 0xce, 0x65, 0x53, 0xaa, 0x53, 0x27, 0x38, 0xf9, 0x02, 0xf0, 0x4f, 0x70,
	0x32, 0xa8, 0xc5, 0x5c, 0x72, 0xc5, 0xfa, 0xf3, 0x89, 0x5f, 0xce, 0xff, 0x98, 0xef, 0xe1, 0x81,
	0x63, 0x11, 0x0c, 0x3e, 0x93, 0xef, 0x1e, 0x5c, 0xbb, 0xa8, 0x18, 0xb9, 0x53, 0x0b, 0x5b, 0xe1,
	0x37, 0xff, 0x68, 0xcd, 0xea, 0xc2, 0x06, 0xf4, 0xa6, 0x61, 0xb4, 0x4b, 0x96, 0x37, 0x42, 0xe6,
	0xd0, 0x5e, 0x70, 0xd9, 0x0a, 0x39, 0xaa, 0xdc, 0xe8, 0xef, 0xb1, 0xe2, 0xad, 0x32, 0xf7, 0x56,
	0xd9, 0xd3, 0xfc, 0xad, 0xba, 0x25, 0x0c, 0x56, 0x2c, 0xe1, 0x51, 0x04, 0xbe, 0x90, 0x75, 0xe3,
	0x86, 0xde, 0xcb, 0x7b, 0xb1, 0xd0, 0xaf, 0x66, 0x23, 0x76, 0x2e, 0xa7, 0x81, 0xad, 0x2a, 0x7f,
	0x2b, 0xbf, 0x3a, 0x51, 0x2c, 0x23, 0x93, 0xf8, 0xd5, 0x68, 0x9e, 0x85, 0x0f, 0x47, 0x9b, 0xe6,
	0x70, 0xf7, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x88, 0x56, 0x5e, 0xf9, 0xa4, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProjectsClient is the client API for Projects service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProjectsClient interface {
	// Creates a new project.
	CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*Project, error)
	// Gets the specified project.
	GetProject(ctx context.Context, in *GetProjectRequest, opts ...grpc.CallOption) (*Project, error)
	// Lists projects.
	ListProjects(ctx context.Context, in *ListProjectsRequest, opts ...grpc.CallOption) (*ListProjectsResponse, error)
	// Deletes the specified project.
	DeleteProject(ctx context.Context, in *DeleteProjectRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type projectsClient struct {
	cc *grpc.ClientConn
}

func NewProjectsClient(cc *grpc.ClientConn) ProjectsClient {
	return &projectsClient{cc}
}

func (c *projectsClient) CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*Project, error) {
	out := new(Project)
	err := c.cc.Invoke(ctx, "/grafeas.v1beta1.project.Projects/CreateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) GetProject(ctx context.Context, in *GetProjectRequest, opts ...grpc.CallOption) (*Project, error) {
	out := new(Project)
	err := c.cc.Invoke(ctx, "/grafeas.v1beta1.project.Projects/GetProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) ListProjects(ctx context.Context, in *ListProjectsRequest, opts ...grpc.CallOption) (*ListProjectsResponse, error) {
	out := new(ListProjectsResponse)
	err := c.cc.Invoke(ctx, "/grafeas.v1beta1.project.Projects/ListProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) DeleteProject(ctx context.Context, in *DeleteProjectRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grafeas.v1beta1.project.Projects/DeleteProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProjectsServer is the server API for Projects service.
type ProjectsServer interface {
	// Creates a new project.
	CreateProject(context.Context, *CreateProjectRequest) (*Project, error)
	// Gets the specified project.
	GetProject(context.Context, *GetProjectRequest) (*Project, error)
	// Lists projects.
	ListProjects(context.Context, *ListProjectsRequest) (*ListProjectsResponse, error)
	// Deletes the specified project.
	DeleteProject(context.Context, *DeleteProjectRequest) (*empty.Empty, error)
}

func RegisterProjectsServer(s *grpc.Server, srv ProjectsServer) {
	s.RegisterService(&_Projects_serviceDesc, srv)
}

func _Projects_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grafeas.v1beta1.project.Projects/CreateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).CreateProject(ctx, req.(*CreateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_GetProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).GetProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grafeas.v1beta1.project.Projects/GetProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).GetProject(ctx, req.(*GetProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_ListProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).ListProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grafeas.v1beta1.project.Projects/ListProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).ListProjects(ctx, req.(*ListProjectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_DeleteProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).DeleteProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grafeas.v1beta1.project.Projects/DeleteProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).DeleteProject(ctx, req.(*DeleteProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Projects_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grafeas.v1beta1.project.Projects",
	HandlerType: (*ProjectsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProject",
			Handler:    _Projects_CreateProject_Handler,
		},
		{
			MethodName: "GetProject",
			Handler:    _Projects_GetProject_Handler,
		},
		{
			MethodName: "ListProjects",
			Handler:    _Projects_ListProjects_Handler,
		},
		{
			MethodName: "DeleteProject",
			Handler:    _Projects_DeleteProject_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/v1beta1/project.proto",
}
